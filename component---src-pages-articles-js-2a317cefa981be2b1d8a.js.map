{"version":3,"sources":["webpack:///./src/pages/articles.js"],"names":["Content","ArticleDate","MarkerHeader","ReadingTime","IndexPage","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","console","log","Date","map","key","id","to","path","css","date","fields","readingTime","text","excerpt"],"mappings":"8KAQMA,EAAO,2HAMPC,EAAW,+FAKXC,EAAY,gOAWZC,EAAW,+F,+DAyCFC,UApCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,aACX,YAACN,EAAD,KACE,kCACCK,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAGjC,OAFAG,QAAQC,IAAIJ,GACC,IAAIK,KAAKL,GACR,IAAIK,QAEnBC,KAAI,gBAAGL,EAAH,EAAGA,KAAH,OACH,mBAAKM,IAAKN,EAAKO,IACb,YAAC,OAAD,CACEC,GAAIR,EAAKC,YAAYQ,KACrBC,IAAG,GAKH,YAACnB,EAAD,KAAeS,EAAKC,YAAYN,QAElC,uBACE,YAACL,EAAD,KAAcU,EAAKC,YAAYU,MAC/B,YAACnB,EAAD,WAAiBQ,EAAKY,OAAOC,YAAYC,OAE3C,qBAAId,EAAKe","file":"component---src-pages-articles-js-2a317cefa981be2b1d8a.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 1.45rem 1.0875rem;\r\n`\r\n\r\nconst ArticleDate = styled.h5`\r\n  display: inline;\r\n  color: #606060;\r\n`\r\n\r\nconst MarkerHeader = styled.h3`\r\n  display: inline;\r\n  border-radius: 1em 0 1em 0;\r\n  background-image: linear-gradient(\r\n    -100deg,\r\n    rgba(255, 250, 150, 0.15),\r\n    rgba(255, 250, 150, 0.8) 100%,\r\n    rgba(255, 250, 150, 0.25)\r\n  );\r\n`\r\n\r\nconst ReadingTime = styled.h5`\r\n  display: inline;\r\n  color: #606060;\r\n`\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Articles\" />\r\n      <Content>\r\n        <h1>Articles</h1>\r\n        {data.allMarkdownRemark.edges\r\n          .filter(({ node }) => {\r\n            const rawDate = node.frontmatter.rawDate\r\n            console.log(rawDate)\r\n            const date = new Date(rawDate)\r\n            return date < new Date()\r\n          })\r\n          .map(({ node }) => (\r\n            <div key={node.id}>\r\n              <Link\r\n                to={node.frontmatter.path}\r\n                css={css`\r\n                  text-decoration: none;\r\n                  color: inherit;\r\n                `}\r\n              >\r\n                <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\r\n              </Link>\r\n              <div>\r\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\r\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\r\n              </div>\r\n              <p>{node.excerpt}</p>\r\n            </div>\r\n          ))}\r\n      </Content>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { draft: { eq: false } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            rawDate: date\r\n            path\r\n          }\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}